<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACE/SURBVHhe7Z0HmDRVlYZxRcFAMKCSUQFBFAyAILKAOSEK
        gpG0KqAiiKhIVhGzrgEDZjASFBAUAQUlCoiSFBWV6IIrZkAw7X7v/DPO/DOnu6urq7pv3ft9z/M+8Pwz
        011169xTN5xz7hKWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVmWZVnj1H+Iu06zZAVmfpe/g7sIy+qnGRvD
        fpYS95pmWbHcHO4t+Pd7iqUFvzvX7vgcqyE9ULxSfF6cPM03xGni9AD+nZ/ze18TXxafEx8X7xWHiNeK
        XcU2YnOxnlhR8GB5iFZ+omPSabGnR4onixeKVwls4oMCOzlWnCK+Lb4nzhbnifOn4f/PEfz7d8WZ4jti
        xvawO2x1D8F3WSNoFfF18U/xfy1wp/iDuFH8VPDAPyswiB3FJmJlgYe3uiXe1A8TOPn9xKcEHfUn4tfi
        L6ItuwI++ySBDVs1dZiIGncc/E3gHH4svioOFE8ROATeJlZaurtYS+wg3i/OEjj220X0fMfFW4VVQ/cV
        3xdRo06K28SVglHCS8RDhJ3B5HQ3sa7YXRwvfiVw3NGzmxTYMLZsDanVBcPyqFFTAEP7ufiEeLbwQx6f
        VhDbCuba14k2h/KjcpVYTVhD6j7iAhE1amrcKlg/eLVYVVjtaA2xt2AxbtJD+6pwrdiyVUOHiqhRU4U3
        0eWCRSd7/ebEaJA2Zfr1LxG1faocLKyaYmvuOPEPETVuqmCklwq2mO4nrHqi7dgCpi271vH/LthSfJCw
        RhBGsIs4UhwzIjyQE8U3BavEFwnmaDeLv4qm55KsE5whni4cX1BdLKyy48LeetOLejxjnvVNgjWmiwW2
        8C3Bth0vnMh2hgFb3VnY+TcoIvkwjFGZidgigouFO4bq64snid0EW0inClaUm5pn/k68R3h9YLBWEu8S
        t4ioLYeF9ZlfCILDeAavEDxrgoGYWmAD8yP5RsVRpx0XEWMPFqzuHy5Y4KMTRwY2DOcKjM8GEmsrQXTd
        qMP9/xVE8rEHz+iLjk7YrmXVElFljxdECLKvO8rIgKEnK9n3ENYiMRpjvYQIvajNqsCbnvDcA8RGgrBu
        y2pc9xfPFeQY8KaJjHEQd4gjhGPFF7UncfjMy6O2GgQO9SjxLLG8sKyxiHkjowKSjFhEjIxzECcIoglL
        FdMsFmbrDPn/R3xEPE4QEWhZExELR5sKwoPJHYiMtR/MeVmQKk3rCJJzojbpx5/EZwTDfBbcLCsJkYzy
        TMHi07BxC6wrbCBKEQ6PlNqoLXpBm+IwthbOzrSSFXHqRK3dICJD7gVhzyWMBB4uyKmP2qAXzPMPErSt
        ZXVCmwkCWYaZ3zIdeKjIVdwbBTSie+8FK/tbCm+dWp0Tq/zvE2xRRcYdQQGUHMNHaQsi7aJ7jmBXgAVW
        B09ZnRZrA0QYsmodGXoEhp/TPjb3wj1VHQ39XrxeOFbCykYsEFatb0D8+/4ih+KS3AP3UjWmn7UTiq24
        sKaVnYgbILMtMvz5EHpMwFFTItqO5BRi7dcW7DpsKNhO4//5N35GbDy/25SoyVc1rp/8C8KvLStbbSyq
        OoErBKvmw4rYBIpRUvGYdFoi7aiQfKG4WjAd+Y34raBz8v/8Gz9jS5Lf/YDgb/kMPovPHFZUW+Yeonub
        Dwk7TxOWlb0YCZCGHHWE+RByvIwYJPbG6XCUo/6SoJjpqJVv+ds/Cz7ri4LPJnOyygiBa+bao8+dD8P+
        ZwjLKkYYfJXkF0qXv0b0ElWKKWFO5WI6UtM1DebCIh7XzHdRo6FfyWuumWuPPmcujEJeICyrODHErpJZ
        SMcmrXVmL5z/UvOeclOXiSodrWmoeMN3cw1cy9xrw7lVCYTi3nEU3uO3ihRDaarHRJ1jPrx5SX7hVCP+
        y5w5+r1JwLVwTfuIj4oqW56MJlibaHLB0bI6pzUFhUSjTpIzlOByOrRlSZSpmsQwflJQy59j1yzLkiiK
        QbmwqLPkxqBFTcsqUvuKOoUxugb1FX2KkmXNE5Vtmig8mjokR1mWNU/sqf9SRJ0mJ94rLMuaJ3YDquyd
        dx3qAbh4p2XNE+mvBNdEnSYnyPPfSzj4x7KmtYOoW2K8ixD++0JhWcWLM/DYF486Ss5cL7h3yypWpPr+
        SEQdpARIi36EsKziRPAP9f+ijlEStIFP0bWKEgdacHBlm6m7XYE2oC18yIdVjEiXLSHopyq0BTUTLSt7
        kQFH/f+oI5QMIcI5lkO3rMXEqUEe+i+ENnmTsKxsta6g8GbUAcyiwiJ1iqBaVvIi8u2dIjJ8M8u7haME
        rezEcdglJPuMCmcDMFKyrKzE/DYyeLOQA4VlZaMHCA7liIzdLOQiQZtZVhbiuKvbRGTsZiGUC+dIMcvq
        vFjQ+rCIDN30hvLiPiDU6rwYyv5QREZuekOikMuGW53XFoLz9SIjN72hzbYSltVpcVpOZOBmMFRJsqzO
        igy3z4vIuCcBJccoycWpwbxh/zQN/3+r4GcplSXjlGNnCVqdFXnuF4jIuNvgDnGT4DhvEo440psy3PsL
        jvZ+iXieIBvxyeKJ0/D//Bs/43f4Xf6Gv+Uz+Cw+k8/mO6LvbgO2TqmbYFmdFKfmVjkCvA6csHOjIIvu
        k2JvQUrtowRZdfcUdxOjis/gs/hMPpvv4Lv4Tr6ba2jrWDPajghKy+qkthQMrSPjHhay5XgDU1abnIJt
        BSGzy4lJxM7znXw317CdeLs4XXAycFPZjrQdIxTL6qR2FH8TkXFX4R+C/IGvCA4QXV8sK1LVMoJr3E1w
        zcT1cw/RvVWB9YidhGV1Um8QkWEPgrfo18TLBAeGNDGUH7e45rXELuJ4wT1F9zqINwrL6qRIbY2MOoJ5
        NDHwh4rHiKVELuJeHi0OEtzjMAuJtKFldU6EsX5CREY9F7bhviFeKkooiUV0H4eCnCy496hN5kIbOiTY
        6pzuLr4sIqOGP4hjBdtv9xKliXt+mmCtgLaI2ghoQ9rSsjqle4gTxXyDJgjnOPEksbQoXbQBcQjHiGhE
        QBvSlpbVKfGGY2g/Y8isaLNNRppriW/8QaKTby1OE3N3TmhDt5fVOd1bnCEw4ivEK8V9hdVfHB3Olidt
        RtvhNGlLqxDxJlhBrCYeKthKeohYSaS8Bz5fXCtbeR8T3IM1nNj+PEKwhdil5479rih45hsIdj/WE2sI
        UsM97Zsj9orp6ETM7Sl44KwOXywoEU3kG8dmE25KLPq3BYUiWDHHQFJeHWbhioMvc9rOG7doQyINU18E
        vI9gTYcjzjjr8HJB3AMnHgHHoXMC9A/ESeL9YlexseBlV0wVZDosW110+H0F3v2ngpDPf4mZed8gmE/j
        ID4iNhVLitzEsJe3xuMEi2SsmNNuvFXYSkupU9D+RAFyXVzzgwXPmVDhnB3gKuI14mzB4m5kq70gXPr3
        AqfwccFLjTMRyLvIShgAw6EXC270MlFl/7cqvxGMHHI4UII3CR39XYKYf0JpeXvMpOv+UfBmYX7Mqvle
        4pFiEpGCDHUJWKIDfFacI3DmXPM14mfi+4KtzjeL5wqcQw7Omue0u6DSU1N5D7zUbhCnCqIfNxGsh3RS
        GAdvqlcL3vIYxCgx8VXA4Fg86uKKMWnDhP2SdjvMm4RRE9OjTwtGQuPInecNxU4GzxXnW3XkRq2Bnwuc
        BWnHDH27JobqTxCniLbtmakD9vAWQVUpnE7SYsj6WEEFHLZumL8PM6xvAkJMMTAWD7sghs0vEDzoUQ2K
        zsjckrdsWyIdmMCcUTMccQbUSWD0sKrogliIpEJRW+nd/WDEfJ5gjSEpZ4ABbyQYsrB/ixFGNzBuKCTB
        fDlV8aYmzZUFI0pgR/dQF4bdTdfSY+1mB8EbPPrOujB8ZhjNFmnKhT94oVDZqe23fhWImjxXMDL4TzF2
        Z8CbntVLOj17tMxRowudNKy6stKaWibd6oJ8fnY3outuAu59e9GEcFZUCGJIGn1XEzD//Y6g2EhqawSs
        7qd6qAvOgAVInMHmgkXXVsSbntVojrZmKy7VTj8fFs8YNqWwj4xhU8TjEhFda9OwWMhce1TtLPrF6jcJ
        q+JMY9ganrR4cbxcTGLIXweeERWaDhGMDEZeQKTT0Ok50y7lN/0geLtQvmqSNeYJYiKtdVwdaQaOIucZ
        1hWGdL2IPrtNzhdPFZPaH+eFR1o2L5Do+lIHO2NXhpEBi5aVX4Cs8GIwFIRkSHaLiL6ga7AYeYKYxOIg
        q/Nniei6xsG3RJ35NVFrbEVGnzkObhavE+PeFyeKjxdGCvP9JmBUxXPkwFW2FsP2xNMy1yHzKpdOH8F8
        idDMcYghJMNntkCjaxkXlOSiIw0rVryb2uOuC7s6hFLTKcchiriygxVdSw7Qt3kRsgD979EV/0PtOrbt
        oj/KjR8JhrZtisWYw0QqQ8ifCPIpqopIPkKvo8+aBOy7t10dmN0sttqi788N1oco/z7lBFg9ZNU4+sVx
        wpCL+SZvaaLH2M9nz5lFR7af2DuO/q4OfB4rzm2I8NCjBGsP0XdPAqZAxGdUFRGGk377z4ftTYawbegp
        4koRfW8dGLlgY0yjsWWKnjCyYDeBaL9xnq3Qi2vFZmKJL0z/wySgIQgfJZKNMlF4eRZg2HfGO/FfogoJ
        biFXnLlZU6uyRNC9SDSZUEQ4MnPu6PsmDesQVRaDaP+ZNObUYCTTZJlwbIz4hqZegGyV0p9mwp6xXewL
        mBKSDo6NE0nJCPGbAnsepXLyKBwtxr7KS/HLqwS13tirZl+8aggrW2nEIHBaTRNelJ0N9rib2HtmsY+C
        l9H3pAD3StsNEvH9qQR0RZAERhm1UcUzJ56/iXgMOjCdmXW0YZKfCFsnY5QQdmyaEvDjHDkyChjLaifD
        dxJYWNB5vhim00ei4VjYamJrknk6W52j5GkznWAkE31+KjANIN9gkCjjPe4Q7mHBcEeZwvGsiWlpYo2G
        VfaDxajFXhghkOLOOQicicjicdsjA16ire1N0+nJ/CNll4CUlcW/Vx4b0MzwrYkRDNdKdN6wAUMM7Ujj
        ZDoRfW5qcNbfIL1HRH+bGmQdkjk5rJjicIpRE2tKJKAxim06CQtnsLYgkpX6kdhXG04Z5zUVVxz9sA63
        CVbZPyTa6PSRGA7yIKLrGQaGXqQrV90zZz+VUUibIbJNQwpxvzUPfsbvRH+bIgQ6MeyuKp4to9AmRr3s
        GFSZUo0qRitME0icYiGxyekZ9zBlxKM0CJlhhLcSwklnpBBE251+voh2wvFE1zcMeFk6wKAtM0JVMaQU
        VnOHgQVK3i69xM9SXcTsBWsCjAQHFUhhgZYU5ibepFSt4g09bvHSIeOWPBx2x0Z5+dDnKcoz1WGHXfVl
        7sSCF8NFhmFEjU1apKqeI6LrHRa2axjBzC9GyRSBgzDZkor+LnV4zv3WOli1xrCiv00Z0mU/J7BFgoZ4
        bqwTMS+nLgWRrSw8R387DGyNsnI+rsCkfmIqw8Izsf9snQ87lec5//s+NhSkZUa/OAOFKuj07xDsm6ZY
        0AGvzDApuv5hwcnxWQcIVmlZ6CEnYtjSTynBQ6eT91JXHcAMPBv280lNJ3gIR01IcRNvfaaIjPoo3pKa
        SAkmuI3Yf6b0g5zBpWLB9IXii+yzs+DAAgnDW4YYzBMOF9Sl60IVFwJxCCBqctFkUvu0TZO7A2gL+gLJ
        XMMuEk9CZAES3EecAc6APsz106eJOSDAjirFoZgD4gjYYnmOYL7RxVr2LPawoJdSNF4K2AEMDwvbZAb2
        a7dURd+lD9OX6dOsgxRTpRpvzdZe1xbq2sQOYDhYWyApyqXdOyoWvEiDHLWGXS7YAVSHIDPWfpre47fG
        LKY1e4txF+NIETuAajBXpoz9uLezrZaEF99NdClopw3sAAZDCC7JOlZmIsqNOPecC54Mwg6gP8QKsNtl
        ZSqGdFTp6Wp9w1GxA+gNkaRT+fFW3sIJkGRBIkRkCDljBxBDgBvbZVYhYjrAwiB7vJFB5IodwEJIU3fn
        L1AkjxDhWFKwkB3A4jAVfLawChUx1FRJjYwjR+wAFue9wvv8hYtCk1RJjQwkN+wAZqGQDHn2VuHiDXCk
        iIwkN+wAZqFab7/aCFZBok5hCWsBdgCzUAfSsqb0eFHCtqAdwCzEg1jWlCimQOZXZCg5YQewCGpFcDKO
        ZU3pBSKXoh/9sAOYhfMgLGtKxANERpIbdgCzUDHHsqYqrVJDLjKS3LADmIXDN/qVSLcKESXQOLAxMpLc
        sAOYhYKhXSx3ZzUsFoNKCQe2A5iF4/AdCFS4yAw8QkQGkiN2ALNwMAbxH1bBYgh4vogMJEfsABaHMwKt
        gsVR2E0cD90V7AAWhyO+WAS2CtWOwunAsyrNAXCuIEfVW4WKcwMiw8gVO4DF4fg31wAsVJwZ0NQ5gl3B
        DmAhHLttFShOReYgycgocsUOYCEcIeeAoALFsdGlFAKZwQ5gId8VHCVuFSbOkufE1MgocsUOYCFXizWE
        VZg49y0yiJyxA1gIdSA2FVZhIhssMoicsQNYCGng2wmrMH1SRAaRM3YAMa8TVkGiEOiJIjKGnLEDiHmf
        sArSvcV3RGQMOWMHEENtAB8FXpBWEBeLyBhyxg4g5nTRr12szLSWuFZExpAzdgAxl4kVhVWInifuEJEx
        5IwdQMwfBZWhrQK0lPiiiAwhd+wAevNB4ZDgArS9KOEMgAg7gN7cLJwZmLm2ED8TkQGUgB1Afy4RFImx
        MtNy4r8EBSCiB18KdgCDuULsIJwgVEF0rLXF+gnyKMEbf29xhigt8SfCDqAafxGUC3uV2FxgS5GNTZo1
        xURKmq0s9hfnCLbTmD+lBrX+bhPRAy4VO4Dh4AzBWwW2FNnYpPmV+JZ4mVhejEXribNE1GAmbewA8oQS
        518Rq4hWdR9xkoguwqSPHUDeHCUIc29NnKJzp4i+3KSPHUDesM7FAmYrups4WkRfbLqBHUD+fEHQVxvX
        suICEX2p6QZ2APlzqWjl0FNWGX8ooi813cAOIH+uEmS7Ni72G08V0ZeabmAHkD/UuWgtiOnNIvpS0w3s
        APLnENGaqKV/jYi+2KSPHUDeMPxfR7Sq3QVnqkUXYNLGDiBfOOTm+aJ1scWws6CKChFI0cXUgbDLGf45
        DSWbZ+AU317wc36fv40+2yzCDqA5etnpXGZ+PmObc4k+sw63CyJzny7GWtdwVUFu/aHi3T04XLxtDtTi
        5/cPFgeI/cQbBWWZ9xEc1Phq8UrBwR0vFzibncSLxQsDCE4i04+/IfHnTeIdgrLfJHRw/h8VX6LGKw07
        gOHAbhhWnyaIgfmAeIsgDwZ7JVkIO91VYKNz2UVgv7CHwK73FK8V/O3rBfYPBwnm7vSNuf0F3i6ivgUH
        imeIVrb9chA7F9R6IysQp0DyRPSgS8EOoBqMbumQZAKS+LaMcLWgDPRYca6IHnoJ2AH0hyntkcJnBWas
        x4sbRWQAuWMH0B/OByDi1cpYDOU+KiIDyB07gN7cJDYSVgHaRrgs+EKV7ACOFVSMtgrQw8QNIjKEnLED
        iGFbjh0oqxCxbVJiZqMdQAw1AH0wSEFaUvh04IUq1QGwPfxQYRWkj4jIGHLGDiDmPEG5O6sgEc0VGUPO
        2AHEHCPuKqyCtKNoMia7C9gBxLxTWIXpqaK0w0LsAGLIcLUK04aCAx8ig8gVO4CFEA9CQo1VmFYXPxeR
        UeSKHcBCiAB8tLAKEwcosPobGUWu2AEshHTxBwmrMFHYhOSPyChyxQ5gIZytt7SwChQFSyKjyBU7gIUc
        IcZaScdKR1RrKWkr0A5gIVSRsgrVVuJPIjKMHLEDWByO/vYOQMF6sCipzLkdwOJcL9YSVqGi1tsZIjKO
        HLEDWJzviuWEVbA+JCLjyBE7gMUhIcwqXJQUp4Z7ZCC5YQcwC7X6WQS2CheVgm8RkZHkhh3ALDxzwsGt
        wnV/cZGIjCQ37ABmuVDw7K3CRRAIteAjI8kNO4BZPi4cAGRNidoAJawD2AEsgmf9UmFZU1pPlHBYiB3A
        InjWPHPLmhLxAMwJI2PJCTuARXxf8Mwta0oPEJeLyFhywg5gERz+uYKwMhRpvtT9J8STQg+bTMN23zqC
        04I5NXjmtFdSQd8gSjgpyA5gETxrjueeOQkIW8AO7idWEw+ZhpOBiRS8u7ASFiWdOdiBSr/HiUsEtd5/
        I34/DeW/rhMUgDhTfEJw/vrxgoMhIkPJDTuAWXjm2Ao2wC4Q9/0j8TPxi2l+Ii4WXxfvFwSN8SJx+HAi
        4jAHPPnZ4g8ietBmFjuA0SB6kBcJOQQHiccIjw4mIEo47Sfw0NGDMjF2AM1CPcGjBGnldgRjEHM1ynnz
        xscbRw/F9MYOoB2YYn5KrC+slsTCHcN95vXRQzCDsQNoF9YNXiXuJawGxar+h0WJZ/o3iR1A+2CjjAbY
        QbAaEPu1zLM85B8dO4DxQbXhdYU1gtje+4wo7Qy/trADGC/nCIcc1xTG+N/Cb/7msAMYP2wZUnvSGkKs
        9u8rPOdvFjuAycDx44xmrYp6jvitiBrT1McOYDKQfnywmAk/t/qIeH2SNaKGNKNhBzA5iCB8krD6iAM7
        vyCiBhyWP4qfCsp+MwQ7WnxFsDqLgyGeoJRioDPYASyENabfiavFueIb4iRxqqBUHGcH3C6ivx0WPnN5
        YfXQ7mKUeT8dmkSgQ8WWYiVB3jdZX0sKwjVxMmwtkim4s6A01I/F30T0mTlhB7CIvwuOhv+soDLwpoJ9
        ezonQTy0A3ZC/MmagikpyUBXiVF2pO4ULxNWILZLyMSKGq4KZP+9VpDuO4yYl60qXizI+vqziD4/B0p3
        AGQA8hbeRbAyf1cxjPgbkoBGqR7FqIIXkzVHvKE/KaIGqwJbLRuLUYXXf6bAEfxVRN/VZUp1ALx5Gdpv
        LZqoBLS5OE9E3zUIRqn7CGuOnifqHtJJbn/T57stK8j9zi3bsEQHwLCdqWXTc++Hie+J6DsHcYVwbMC0
        HihYfIkaahAs8j1KtCWmJccK5ozR93eNkhwAb1qKvTxStCXqAdSdth4iLInhUJ3VeIbou4q2xZvjzSKH
        qkGlOACe1VvEOIJvGCnWmS6SOVh8rsDagiFa1ECDOFkwVB+HqDP4GsHWYnQtXaEEB0BlqD0Fz2wcwgZP
        EdG1DOI9otjgIG6cBogaZhCsF7BYN06xYowT6PJIIHcHwLOh84+7Uz1L1FnDukFQY7BIbSR+LaKGGcSX
        RT9Dbku8VZgOdHVNIGcHwDPh2YzrzT9XtBs2GV3XID4miFEpStwwAThRgwyCU123EJMSFWGJLIyuLXVy
        dgBEeY5rShgJm6xzyjQhwk8QRYkb5sajBhkE8QKT8PJz9QjBDkR0fSmTqwPgWfBMJilssm4sC+HvnEtQ
        hAj6IS4/aohBMGVg6pCCCCHtWrBQjg6A0PHdRAqqO61lcflpogg9UZB8ETXEIIjHHjZ8sy0RM/5FEV1n
        quToAJiOEcGZglh8xEaj6xzECSKV+2hNvP3rdhpi/Sc9zJsvgkxIKomuN0VycwC/FCR1pSRsFFuNrrcf
        t4rtRNbi7U8N9agBBvFWkaJeIboyFcjJAdDme4gURRBSdM2DIHU928pBvP3r5voTk88xYCmK8wooAx1d
        d2rk5AA+J2j7FIWt1skjIWmJFPUsVfftT8EGDgRJWZwkS5pndP0pkYsD4BBPokhTFjZbp6Dt+YL8mKzE
        Fkfdt/8PxCoidRENlnodwxwcAG38bJG6sFlsN7qHfhDQRDRjVqr79qcxUp3nzRcrwFQiSrnMWNcdAPbA
        EfBdiZ/HdutEjTLCWU1koVFW/s8RlO/qiighdaKI7iUFuu4APi8mGe03rLBdDrKN7qUflB3D0WWhum9/
        VnlfIromtgavFNE9TZouOwBqRnSxiMZLRZ06l0Q3pr7OMVCjvP2p3kvcfRdFhaO6251t0lUHcI3YTHRR
        2DC2HN3XIA4XdxGdFXXQ63QE0jqfK7oqohUPFKlVGu6iA8B+KNjaZW0j6qSRXys2EJ0UK/9fEtGNDYJS
        Tl0/Y53ik+xVR/c3KbrmABg67ydSCf+uK2z5OBHd4yA+JDp5/08WVGeJbqofeHz+NgetIerWO2yDrjmA
        j4pUg32GFTZdZzR8k+Dcgk4JQ6qbM89bk7WDXMTD49SZ6F7HTZccAKXZcwqIwabrjgg5wIRDbTqjZ4g6
        JZJuFp3zdhW0vaibAdkkXXEAFwvOiMxN2DY2Ht1zPxg5sJvWCZHSWHcv/AjR9fleJAJXCA2ddNJQFxwA
        C1+TrPjUprBtbDy670GwhtCJ6RCr96Q2RjfRj+tEmzX+Jy0WRd8n6sSHN0XqDoA33YtEzsLGsfXo/vvB
        kXWcUZi0iNLiCKboBgbxDtHpPc8KIlKwbvHIJkjZAbDi/0bRlTDfusLGsfWoDQZB30o6EvIpos7hmpyu
        wlFLJWh1Qd531A5tk6oDIPSV7a5+15aTsPU6hWToW0nvkHFyanTh/eDhHyBK0sPFhSJqjzZJ1QF8VXQp
        56MJYfN1jhonwCxJMbT5sIguuh+XCd6KpelxYtyHj6boAC4QTR/u2gVh89h+1Cb9oI8lO1U+TEQX3QtS
        Zzltp1QRKs0ZcVHbtEFqDoBhcI7bvlW1lxg2fZz8gGRFoYbbRHThEXj/B4mSRcwEW19R+zRNSg6AcyFI
        mipZ2D59IGqfiNtF0jkyZD5xaGd08fNh1XcnYS16qDeKqJ2aJBUHgCEz8st916eKqAFYNV34myL5oqEc
        dlhlbvMZ0fWEnybF27DO/vAwpOAAGPK+S+QU7j2KCJyjL0RtNZcfi41FJ/QYwUgATz//RpgiUEV3RWEt
        rq1Fm9OBFBwA8fDLC2tW9IVPi2j6TPQob/7OdP4Z8ZC3FWR0se8NRwqGu37z9xZrAsRFzDeEJpi0AyBE
        3I4/Fn2CvkEf4RkAB+iSR9LpswKY55HJBLlHeTUlqt9cIqJONAqTdAC8xUrc7h1W9BH3F2uJ9cWZIupM
        daE0Vb+0Uublp4vob0eB6WAX6/lZ1kRFaeijRJ3S0hGcytxv5Z03DufsR39bBxb8qOS7srAsq4ZI/uC8
        gTrVleZT5cAJylFHfzss1MAj6cULfpY1opYUbBNeKqLOVgUiDqsU2dhQUIYq+oyqsIi5o+g33bAsa0iR
        RcaUINpe7QdTiKrnK+Js2KePPmcQvPW5Ps5GsCyrBbFSz2ETlM2qUlyEzk8CCVWKq4rMPDpy1Th1CsCc
        JtjG6rfLYFlWQ+LwyTcIpgW9Fgk5UIMiG3WKSLD3vK+4XEShqgStcHoNASzkgHT1EBfL6rRwBORUEE56
        luAsOvLrcQ7riVHj7fl8SlHxeSzqvU2wmPh0wS4FUwbLsiYstvAYfhNb7k5pWZZlWZZlWZZlWZZlWZZl
        WZZlWZZlWZZlWZZVhpZY4v8BTB9q1HWHsKsAAAAASUVORK5CYII=
</value>
  </data>
</root>